#spring.kafka.bootstrap-servers=localhost:29092

spring.datasource.url=jdbc:mysql://project-db:3306/projectdb
spring.datasource.username=root
spring.datasource.password=admintest123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.jpa.show-sql: true
server.port=8888
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

spring.kafka.bootstrap-servers=kafkaContainer:9092,kafkaContainer2:9093,kafkaContainer3:9094

spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.UUIDSerializer
spring.cloud.stream.kafka.binder.configuration.key.deserializer=org.apache.kafka.common.serialization.UUIDDeserializer
spring.cloud.stream.kafka.binder.configuration.reconnect.backoff.ms=5000

#Producer for project topic
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.topic.name=project_topics

#Consumer for registration message
spring.kafka.consumer.group-id: registration
spring.kafka.consumer.auto.offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.max.poll.interval.ms=30000
spring.kafka.consumer.max-poll-records=500
spring.kafka.consumer.topic.name=registration_topics


